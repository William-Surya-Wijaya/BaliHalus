<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.0/themes/smoothness/jquery-ui.css" />

<link rel="stylesheet" href="//cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" />
<script src="//cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>

<link rel="stylesheet" href="/baliHalus/admincss" />

<html>
  <body>
    <div id="page" class="main-page">

      <%- include('./layout/left-bar.ejs') %>

      <div class="page">
        <%- include('./layout/top-bar.ejs') %>

        <div class="page-content">
          <div class="content">
            <div class="page-nav-title" style="font-weight:bold !important; font-size: 2em; margin-bottom: 1em;">Add On Data <button class="button-action add-button" style="font-size:0.5em !important;margin-left: 1em;">Add</button></div>

            <div style="min-height: 27em !important; min-width: 80% !important;">
              <table id="historyTable">
                <thead>
                  <tr>
                    <th>No</th>
                    <th>Service</th>
                    <th>Add On</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% for(const row of addon) { %>
                    <tr>
                      <td></td>
                      <td><%= row.service %></td>
                      <td><%= row.variant %></td>
                      <td class="row">
                        <button id="<%= row.id_variant %>" class="button-action edit-action">Edit</button>
                        <button id="<%= row.id_variant %>" class="button-action delete-action">Delete</button>
                      </td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>

  <div class="popup-form" id="popup">
    <div class="card">
      <div class="header">EDIT</div>
      <div class="content-form">
        <div class="form">
          <div class="form-group">
            <label class="form-label">Service</label>
            <select id="service" class="input max" autocomplete="off" >
              <option selected hidden>Pick a Service</option>
              <% for(const row of service){ %>
                <option value="<%= row.id_service %>"><%= row.service %></option>
              <% } %>
            </select>
          </div>
          <div class="form-group">
            <label class="form-label">Add On</label>
            <input id="addon" class="input max" placeholder="Input add on" autocomplete="off" />
          </div>
        </div>
        <div class="button-group">
          <button id="submit" class="button primary">Submit</button>
          <button  class="button secondary" id="cancel">Cancel</button>
        </div>
      </div>
    </div>
  </div>

  <div class="popup-form" id="popup-add">
    <div class="card">
      <div class="header">ADD</div>
      <div class="content-form">
        <div class="form">
          <div class="form-group">
            <label class="form-label">Service</label>
            <select id="add-service" class="input max" autocomplete="off" >
              <option selected hidden value="">Pick a Service</option>
              <% for(const row of service){ %>
                <option value="<%= row.id_service %>"><%= row.service %></option>
              <% } %>
            </select>
          </div>
          <div class="form-group">
            <label class="form-label">Add On</label>
            <input id="add-addon" class="input max" placeholder="Input add on" autocomplete="off" />
          </div>
        </div>
        <div class="button-group">
          <button id="add-submit" class="button primary">Submit</button>
          <button  class="button secondary" id="add-cancel">Cancel</button>
        </div>
      </div>
    </div>
  </div>
</html>

<script>
  const table = $('#historyTable').DataTable({
    "paging": true,
    "lengthChange": false,
    "searching": true,
    "info": true,
    "autoWidth": false,
    "pageLength": 10,
    scrollX: true,
    fixedColumns: {
      left: 2,
      right: 1
    },
    "drawCallback": function(settings) {
      $('#historyTable').find('td').addClass('noWrap');
      $('#historyTable').find('td:nth-child(1)').addClass('textRight');
      $('#historyTable').find('td:nth-child(1)').addClass('table-title');
    },
    "columnDefs": [
      {
        "targets": 0,
        "width": "50px"
      },
      {
        "targets": 3,
        "width": "100px"
      },
      {
        "targets": 0,
        "data": null,
        "orderable": false,
        "className": "dt-center",
        "render": function (data, type, row, meta) {
          return meta.row + 1;
        }
      }
    ]
  });

  function assignButton(){
    const popup = document.getElementById('popup');
    const cancel = document.getElementById('cancel');

    cancel.addEventListener('click',(event)=>{
      popup.classList.toggle('show');
    });

    const formService = document.getElementById("service");
    const formAddon = document.getElementById("addon");

    const addAction = document.querySelector(".add-button");
    const addPopup = document.getElementById("popup-add");

    const addFormService = document.getElementById("add-service");
    const addFormAddon = document.getElementById("add-addon");

    const submitButton = document.getElementById('submit');
    const buttonAction = document.querySelectorAll('.edit-action');
    
    buttonAction.forEach((button)=>{
      button.addEventListener('click',(event)=>{
  
        const req = {id_variant : event.target.id};
  
        const init = {
          method: 'post',
          headers: {
              "Content-Type": "application/json"
          },
          body: JSON.stringify(req)
        }
  
        fetch('/BaliHalus/getAddonData', init).then((response) => {
          return response.json(); 
        }).then((result) => {
          if (result !== 'failed') {
            const { id_service, variant } = result[0];
  
            formService.value = id_service;
            formAddon.value = variant;

            popup.classList.toggle('show');
          } else {
            Swal.fire({
              title: 'Failed',
              text: "Failed to get branch's detail",
              icon: 'error',
              background: "#f9faf4",
              color: '#1b2e1a',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Ok !'
            });
          }
        }).catch((error) => {
          console.error('Error:', error);
          
        });
  
        submitButton.addEventListener('click', (event)=>{
          Swal.fire({
            title: 'Are you sure ?',
            text: "Make sure your data is right!",
            icon: 'warning',
            background: "#f9faf4",
            color: '#1b2e1a',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes !'
          }).then((result) => {
            if (result.isConfirmed) {
              const form = {
                id_service: formService.value,
                addon: formAddon.value,
                id_variant: req.id_variant
              };
    
              const init = {
                method: 'post',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(form)
              };
    
              fetch('/BaliHalus/editAddonData', init).then((response)=>{
                return response.text();
              }).then((resultText)=>{
                if (resultText == 'ok'){
                  Swal.fire({
                    title: 'Success',
                    icon: 'success',
                    color: '#1b2e1a',
                    text: `User's data edited successfully`,
                    showConfirmButton: false,
                    timer: 1000,
                    timerProgressBar: true
                  }).then(()=>{
                    location.href='/BaliHalus/admin/addons';
                  });
                } else if (resultText != 'ok'){
                  Swal.fire({
                    title: 'Failed',
                    text: resultText,
                    icon: 'error',
                    background: "#f9faf4",
                    color: '#1b2e1a',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Ok !'
                  });
                } else {
                  Swal.fire({
                    title: 'Failed',
                    text: "Please try again or contact admin!",
                    icon: 'error',
                    background: "#f9faf4",
                    color: '#1b2e1a',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Ok !'
                  });
                };
              });
            }
          });
        }); 
      });
    });
  
    const deleteAction = document.querySelectorAll(".delete-action");
  
    deleteAction.forEach((button)=>{
      button.addEventListener("click",(event)=>{
  
        Swal.fire({
          title: 'Are you sure?',
          text: "Are you sure you want to delete this data ?",
          icon: 'warning',
          background: "#f9faf4",
          color: '#1b2e1a',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete !'
        }).then((result) => {
          if (result.isConfirmed) {
            const req = {id_variant: event.target.id};
  
            const init = {
              method: 'post',
              headers: {
                  "Content-Type": "application/json"
              },
              body: JSON.stringify(req)
            };
  
            fetch('/BaliHalus/deleteAddonData', init).then((response)=>{
              return response.text();
            }).then((resultText)=>{
              if (resultText == 'ok'){
                Swal.fire({
                  title: 'Success',
                  icon: 'success',
                  color: '#1b2e1a',
                  text: `Add on's data deleted successfully`,
                  showConfirmButton: false,
                  timer: 1000,
                  timerProgressBar: true
                }).then(()=>{
                  location.href='/BaliHalus/admin/addons';
                });
              } else if (resultText != 'ok'){
                Swal.fire({
                  title: 'Failed',
                  text: resultText,
                  icon: 'error',
                  background: "#f9faf4",
                  color: '#1b2e1a',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: 'Ok !'
                });
              } else {
                Swal.fire({
                  title: 'Failed',
                  text: "Please try again or contact admin!",
                  icon: 'error',
                  background: "#f9faf4",
                  color: '#1b2e1a',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: 'Ok !'
                });
              };
            });
          }
        });
      });
    });
  
    addAction.addEventListener('click', (event)=>{
      addFormService.value = "";
      addFormAddon.value = "";
  
      addPopup.classList.toggle('show');
  
      addSubmit.addEventListener('click',(event)=>{
  
        Swal.fire({
          title: 'Are you sure?',
          text: "Are you sure you want to add this data ?",
          icon: 'warning',
          background: "#f9faf4",
          color: '#1b2e1a',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, add !'
        }).then((result) => {
          if (result.isConfirmed) {
            const form = {
              id_service: addFormService.value,
              addon: addFormAddon.value
            };
  
            const init = {
              method: 'post',
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify(form)
            };
  
            fetch('/BaliHalus/addAddonData', init).then((response)=>{
              return response.text();
            }).then((resultText)=>{
              if (resultText == 'ok'){
                Swal.fire({
                  title: 'Success',
                  icon: 'success',
                  color: '#1b2e1a',
                  text: `Add on's data added successfully`,
                  showConfirmButton: false,
                  timer: 1000,
                  timerProgressBar: true
                }).then(()=>{
                  location.href='/BaliHalus/admin/addons';
                });
              } else if (resultText != 'ok'){
                Swal.fire({
                  title: 'Failed',
                  text: resultText,
                  icon: 'error',
                  background: "#f9faf4",
                  color: '#1b2e1a',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: 'Ok !'
                });
              } else {
                Swal.fire({
                  title: 'Failed',
                  text: "Please try again or contact admin!",
                  icon: 'error',
                  background: "#f9faf4",
                  color: '#1b2e1a',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: 'Ok !'
                });
              };
            });
  
            addPopup.classList.toggle('show');
  
            Swal.fire({
              title: 'Saved !',
              icon: 'success',
              color: '#1b2e1a',
              text: 'Data successfuly Added.',
              showConfirmButton: false,
              timer: 1000,
              timerProgressBar: true
            });
          }
        });
      });
    });

    const addCancel = document.getElementById('add-cancel');
    const addSubmit = document.getElementById('add-submit');

    addCancel.addEventListener('click', (event)=>{
      addPopup.classList.toggle('show');
    });
  }

  assignButton();

  $('#historyTable').on('draw.dt', function() {
    assignButton();
  });
</script>